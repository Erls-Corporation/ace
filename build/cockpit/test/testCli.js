define(function(j, k) {
  var a = j("cockpit/test/assert").test, i = j("pilot/types").Status, u = j("pilot/settings").settings;
  j("cockpit/cli");
  j("cockpit/cli");
  var o = j("cockpit/cli").CliRequisition, n = j("pilot/canon"), r = {name:"tsv", params:[{name:"setting", type:"setting", defaultValue:null}, {name:"value", type:"settingValue", defaultValue:null}], exec:function() {
  }}, s = {name:"tsr", params:[{name:"text", type:"text"}], exec:function() {
  }};
  k.testAll = function() {
    n.addCommand(r);
    n.addCommand(s);
    k.testTokenize();
    k.testSplit();
    k.testCli();
    n.removeCommand(r);
    n.removeCommand(s);
    return"testAll Completed"
  };
  k.testTokenize = function() {
    var b, f = new o;
    b = f._tokenize("");
    a.verifyEqual(1, b.length);
    a.verifyEqual("", b[0].text);
    a.verifyEqual(0, b[0].start);
    a.verifyEqual(0, b[0].end);
    a.verifyEqual("", b[0].prefix);
    a.verifyEqual("", b[0].suffix);
    b = f._tokenize("s");
    a.verifyEqual(1, b.length);
    a.verifyEqual("s", b[0].text);
    a.verifyEqual(0, b[0].start);
    a.verifyEqual(1, b[0].end);
    a.verifyEqual("", b[0].prefix);
    a.verifyEqual("", b[0].suffix);
    b = f._tokenize(" ");
    a.verifyEqual(1, b.length);
    a.verifyEqual("", b[0].text);
    a.verifyEqual(1, b[0].start);
    a.verifyEqual(1, b[0].end);
    a.verifyEqual(" ", b[0].prefix);
    a.verifyEqual("", b[0].suffix);
    b = f._tokenize("s s");
    a.verifyEqual(2, b.length);
    a.verifyEqual("s", b[0].text);
    a.verifyEqual(0, b[0].start);
    a.verifyEqual(1, b[0].end);
    a.verifyEqual("", b[0].prefix);
    a.verifyEqual("", b[0].suffix);
    a.verifyEqual("s", b[1].text);
    a.verifyEqual(2, b[1].start);
    a.verifyEqual(3, b[1].end);
    a.verifyEqual(" ", b[1].prefix);
    a.verifyEqual("", b[1].suffix);
    b = f._tokenize(" 1234  '12 34'");
    a.verifyEqual(2, b.length);
    a.verifyEqual("1234", b[0].text);
    a.verifyEqual(1, b[0].start);
    a.verifyEqual(5, b[0].end);
    a.verifyEqual(" ", b[0].prefix);
    a.verifyEqual("", b[0].suffix);
    a.verifyEqual("12 34", b[1].text);
    a.verifyEqual(7, b[1].start);
    a.verifyEqual(14, b[1].end);
    a.verifyEqual("  '", b[1].prefix);
    a.verifyEqual("'", b[1].suffix);
    b = f._tokenize('12\'34 "12 34" \\');
    a.verifyEqual(3, b.length);
    a.verifyEqual("12'34", b[0].text);
    a.verifyEqual(0, b[0].start);
    a.verifyEqual(5, b[0].end);
    a.verifyEqual("", b[0].prefix);
    a.verifyEqual("", b[0].suffix);
    a.verifyEqual("12 34", b[1].text);
    a.verifyEqual(6, b[1].start);
    a.verifyEqual(13, b[1].end);
    a.verifyEqual(' "', b[1].prefix);
    a.verifyEqual('"', b[1].suffix);
    a.verifyEqual("\\", b[2].text);
    a.verifyEqual(14, b[2].start);
    a.verifyEqual(15, b[2].end);
    a.verifyEqual(" ", b[2].prefix);
    a.verifyEqual("", b[2].suffix);
    b = f._tokenize("a\\ b \\t\\n\\r \\'x\\\" 'd");
    a.verifyEqual(4, b.length);
    a.verifyEqual("a b", b[0].text);
    a.verifyEqual(0, b[0].start);
    a.verifyEqual(3, b[0].end);
    a.verifyEqual("", b[0].prefix);
    a.verifyEqual("", b[0].suffix);
    a.verifyEqual("\t\n\r", b[1].text);
    a.verifyEqual(4, b[1].start);
    a.verifyEqual(7, b[1].end);
    a.verifyEqual(" ", b[1].prefix);
    a.verifyEqual("", b[1].suffix);
    a.verifyEqual("'x\"", b[2].text);
    a.verifyEqual(8, b[2].start);
    a.verifyEqual(11, b[2].end);
    a.verifyEqual(" ", b[2].prefix);
    a.verifyEqual("", b[2].suffix);
    a.verifyEqual("d", b[3].text);
    a.verifyEqual(13, b[3].start);
    a.verifyEqual(14, b[3].end);
    a.verifyEqual(" '", b[3].prefix);
    a.verifyEqual("", b[3].suffix);
    return"testTokenize Completed"
  };
  k.testSplit = function() {
    var b, f = new o;
    b = f._tokenize("s");
    f._split(b);
    a.verifyEqual(1, b.length);
    a.verifyEqual("s", b[0].text);
    a.verifyNull(f.commandAssignment.value);
    b = f._tokenize("tsv");
    f._split(b);
    a.verifyEqual([], b);
    a.verifyEqual("tsv", f.commandAssignment.value.name);
    b = f._tokenize("tsv a b");
    f._split(b);
    a.verifyEqual("tsv", f.commandAssignment.value.name);
    a.verifyEqual(2, b.length);
    a.verifyEqual("a", b[0].text);
    a.verifyEqual("b", b[1].text);
    return"testSplit Completed"
  };
  k.testCli = function() {
    function b(l) {
      d.update(l);
      v && console.log('####### TEST: typed="' + l.typed + '" cur=' + l.cursor.start + " cli=", d);
      h = d.getWorstHint();
      c = d.getAssignmentAt(l.cursor.start).getHint();
      g = d.getInputStatusMarkup().map(function(p) {
        return p.valueOf()
      }).join("");
      if(d.commandAssignment.value) {
        e = d.getAssignment(0);
        m = d.getAssignment(1)
      }else {
        m = e = undefined
      }
    }
    function f(l, p) {
      return p.every(function(t) {
        return l === t || l === t.name
      }, this)
    }
    var e, m, d = new o, v = true, h, c, g, q = u.getSetting("historyLength");
    b({typed:"", cursor:{start:0, end:0}});
    a.verifyEqual("", g);
    a.verifyEqual(i.INCOMPLETE, c.status);
    a.verifyEqual(0, c.start);
    a.verifyEqual(0, c.end);
    a.verifyEqual(c, h);
    a.verifyNull(d.commandAssignment.value);
    b({typed:" ", cursor:{start:1, end:1}});
    a.verifyEqual("0", g);
    a.verifyEqual(i.INCOMPLETE, c.status);
    a.verifyEqual(1, c.start);
    a.verifyEqual(1, c.end);
    a.verifyEqual(c, h);
    a.verifyNull(d.commandAssignment.value);
    b({typed:" ", cursor:{start:0, end:0}});
    a.verifyEqual("0", g);
    a.verifyEqual(i.INCOMPLETE, c.status);
    a.verifyEqual(1, c.start);
    a.verifyEqual(1, c.end);
    a.verifyEqual(c, h);
    a.verifyNull(d.commandAssignment.value);
    b({typed:"t", cursor:{start:1, end:1}});
    a.verifyEqual("1", g);
    a.verifyEqual(i.INCOMPLETE, c.status);
    a.verifyEqual(0, c.start);
    a.verifyEqual(1, c.end);
    a.verifyEqual(c, h);
    a.verifyTrue(c.predictions.length > 0);
    a.verifyTrue(c.predictions.length < 20);
    f("tsv", c.predictions);
    f("tsr", c.predictions);
    a.verifyNull(d.commandAssignment.value);
    b({typed:"tsv", cursor:{start:3, end:3}});
    a.verifyEqual("000", g);
    a.verifyEqual(i.VALID, c.status);
    a.verifyEqual(-1, c.start);
    a.verifyEqual(-1, c.end);
    a.verifyEqual("tsv", d.commandAssignment.value.name);
    b({typed:"tsv ", cursor:{start:4, end:4}});
    a.verifyEqual("0000", g);
    a.verifyEqual(i.VALID, c.status);
    a.verifyEqual(-1, c.start);
    a.verifyEqual(-1, c.end);
    a.verifyEqual("tsv", d.commandAssignment.value.name);
    b({typed:"tsv ", cursor:{start:2, end:2}});
    a.verifyEqual("0000", g);
    a.verifyEqual(i.VALID, c.status);
    a.verifyEqual(0, c.start);
    a.verifyEqual(3, c.end);
    a.verifyEqual("tsv", d.commandAssignment.value.name);
    b({typed:"tsv h", cursor:{start:5, end:5}});
    a.verifyEqual("00001", g);
    a.verifyEqual(i.INCOMPLETE, c.status);
    a.verifyEqual(4, c.start);
    a.verifyEqual(5, c.end);
    a.verifyTrue(c.predictions.length > 0);
    f("historyLength", c.predictions);
    a.verifyEqual("tsv", d.commandAssignment.value.name);
    a.verifyEqual("h", e.arg.text);
    a.verifyEqual(undefined, e.value);
    b({typed:"tsv historyLengt", cursor:{start:16, end:16}});
    a.verifyEqual("0000111111111111", g);
    a.verifyEqual(i.INCOMPLETE, c.status);
    a.verifyEqual(4, c.start);
    a.verifyEqual(16, c.end);
    a.verifyEqual(1, c.predictions.length);
    f("historyLength", c.predictions);
    a.verifyEqual("tsv", d.commandAssignment.value.name);
    a.verifyEqual("historyLengt", e.arg.text);
    a.verifyEqual(undefined, e.value);
    b({typed:"tsv historyLengt", cursor:{start:1, end:1}});
    a.verifyEqual("0000222222222222", g);
    a.verifyEqual(i.VALID, c.status);
    a.verifyEqual(0, c.start);
    a.verifyEqual(3, c.end);
    a.verifyEqual(i.INVALID, h.status);
    a.verifyEqual(4, h.start);
    a.verifyEqual(16, h.end);
    a.verifyEqual(1, h.predictions.length);
    f("historyLength", h.predictions);
    a.verifyEqual("tsv", d.commandAssignment.value.name);
    a.verifyEqual("historyLengt", e.arg.text);
    a.verifyEqual(undefined, e.value);
    b({typed:"tsv historyLengt ", cursor:{start:17, end:17}});
    a.verifyEqual("00002222222222222", g);
    a.verifyEqual(i.VALID, c.status);
    a.verifyEqual(-1, c.start);
    a.verifyEqual(-1, c.end);
    a.verifyEqual(i.INVALID, h.status);
    a.verifyEqual(4, h.start);
    a.verifyEqual(16, h.end);
    a.verifyEqual(1, h.predictions.length);
    f("historyLength", h.predictions);
    a.verifyEqual("tsv", d.commandAssignment.value.name);
    a.verifyEqual("historyLengt", e.arg.text);
    a.verifyEqual(undefined, e.value);
    b({typed:"tsv historyLength", cursor:{start:17, end:17}});
    a.verifyEqual("00000000000000000", g);
    a.verifyEqual("tsv", d.commandAssignment.value.name);
    a.verifyEqual("historyLength", e.arg.text);
    a.verifyEqual(q, e.value);
    b({typed:"tsv historyLength ", cursor:{start:18, end:18}});
    a.verifyEqual("000000000000000000", g);
    a.verifyEqual("tsv", d.commandAssignment.value.name);
    a.verifyEqual("historyLength", e.arg.text);
    a.verifyEqual(q, e.value);
    b({typed:"tsv historyLength 6", cursor:{start:19, end:19}});
    a.verifyEqual("0000000000000000000", g);
    a.verifyEqual("tsv", d.commandAssignment.value.name);
    a.verifyEqual("historyLength", e.arg.text);
    a.verifyEqual(q, e.value);
    a.verifyEqual("6", m.arg.text);
    a.verifyEqual(6, m.value);
    a.verifyEqual("number", typeof m.value);
    b({typed:"tsr", cursor:{start:3, end:3}});
    a.verifyEqual("000", g);
    a.verifyEqual("tsr", d.commandAssignment.value.name);
    a.verifyEqual(undefined, e.arg);
    a.verifyEqual(undefined, e.value);
    a.verifyEqual(undefined, m);
    b({typed:"tsr ", cursor:{start:4, end:4}});
    a.verifyEqual("0000", g);
    a.verifyEqual("tsr", d.commandAssignment.value.name);
    a.verifyEqual(undefined, e.arg);
    a.verifyEqual(undefined, e.value);
    a.verifyEqual(undefined, m);
    b({typed:"tsr h", cursor:{start:5, end:5}});
    a.verifyEqual("00000", g);
    a.verifyEqual("tsr", d.commandAssignment.value.name);
    a.verifyEqual("h", e.arg.text);
    a.verifyEqual("h", e.value);
    b({typed:'tsr "h h"', cursor:{start:9, end:9}});
    a.verifyEqual("000000000", g);
    a.verifyEqual("tsr", d.commandAssignment.value.name);
    a.verifyEqual("h h", e.arg.text);
    a.verifyEqual("h h", e.value);
    b({typed:"tsr h h h", cursor:{start:9, end:9}});
    a.verifyEqual("000000000", g);
    a.verifyEqual("tsr", d.commandAssignment.value.name);
    a.verifyEqual("h h h", e.arg.text);
    a.verifyEqual("h h h", e.value);
    return"testCli Completed"
  }
});