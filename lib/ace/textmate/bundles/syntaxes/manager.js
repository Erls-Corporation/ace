define(function(require, exports, module) {

var SyntaxNode = require("ace/textmate/syntax").SyntaxNode;

var syntaxs_hash = {
	'source.apache-config' : require('ace/textmate/bundles/syntaxes/source.apache-config').hash,
'source.apache-config.mod_perl' : require('ace/textmate/bundles/syntaxes/source.apache-config.mod_perl').hash,
'source.applescript' : require('ace/textmate/bundles/syntaxes/source.applescript').hash,
'text.blog.html' : require('ace/textmate/bundles/syntaxes/text.blog.html').hash,
'text.blog.markdown' : require('ace/textmate/bundles/syntaxes/text.blog.markdown').hash,
'text.blog' : require('ace/textmate/bundles/syntaxes/text.blog').hash,
'text.blog.textile' : require('ace/textmate/bundles/syntaxes/text.blog.textile').hash,
'source.plist.tm-grammar' : require('ace/textmate/bundles/syntaxes/source.plist.tm-grammar').hash,
'source.cplusplus' : require('ace/textmate/bundles/syntaxes/source.cplusplus').hash,
'source.c' : require('ace/textmate/bundles/syntaxes/source.c').hash,
'source.css' : require('ace/textmate/bundles/syntaxes/source.css').hash,
'source.diff' : require('ace/textmate/bundles/syntaxes/source.diff').hash,
'text.html.basic' : require('ace/textmate/bundles/syntaxes/text.html.basic').hash,
'source.java' : require('ace/textmate/bundles/syntaxes/source.java').hash,
'source.java-props' : require('ace/textmate/bundles/syntaxes/source.java-props').hash,
'source.js' : require('ace/textmate/bundles/syntaxes/source.javascript').hash,
'text.bibtex' : require('ace/textmate/bundles/syntaxes/text.bibtex').hash,
//'text.tex.latex' : require('ace/textmate/bundles/syntaxes/text.tex.latex').hash,
'text.tex.latex.beamer' : require('ace/textmate/bundles/syntaxes/text.tex.latex.beamer').hash,
'text.log.latex' : require('ace/textmate/bundles/syntaxes/text.log.latex').hash,
'text.tex.latex.memoir' : require('ace/textmate/bundles/syntaxes/text.tex.latex.memoir').hash,
//'text.tex' : require('ace/textmate/bundles/syntaxes/text.tex').hash,
'text.tex.math' : require('ace/textmate/bundles/syntaxes/text.tex.math').hash,
'text.mail.markdown' : require('ace/textmate/bundles/syntaxes/text.mail.markdown').hash,
'text.html.markdown' : require('ace/textmate/bundles/syntaxes/text.html.markdown').hash,
'text.html.markdown.multimarkdown' : require('ace/textmate/bundles/syntaxes/text.html.markdown.multimarkdown').hash,
'source.objcplusplus' : require('ace/textmate/bundles/syntaxes/source.objcplusplus').hash,
'source.objc' : require('ace/textmate/bundles/syntaxes/source.objc').hash,
'source.strings' : require('ace/textmate/bundles/syntaxes/source.strings').hash,
'source.open-gl' : require('ace/textmate/bundles/syntaxes/source.open-gl').hash,
'source.perl' : require('ace/textmate/bundles/syntaxes/source.perl').hash,
'source.php' : require('ace/textmate/bundles/syntaxes/source.php').hash,
'source.python' : require('ace/textmate/bundles/syntaxes/source.python').hash,
'source.regexp.python' : require('ace/textmate/bundles/syntaxes/source.regexp.python').hash,
'source.ruby' : require('ace/textmate/bundles/syntaxes/source.ruby').hash,
'text.html.ruby' : require('ace/textmate/bundles/syntaxes/text.html.ruby').hash,
'source.javascript.rails' : require('ace/textmate/bundles/syntaxes/source.javascript.rails').hash,
'source.ruby.rails.rjs' : require('ace/textmate/bundles/syntaxes/source.ruby.rails.rjs').hash,
'source.ruby.rails' : require('ace/textmate/bundles/syntaxes/source.ruby.rails').hash,
'source.sql.ruby' : require('ace/textmate/bundles/syntaxes/source.sql.ruby').hash,
'source.shell' : require('ace/textmate/bundles/syntaxes/source.shell').hash,
'source.sql' : require('ace/textmate/bundles/syntaxes/source.sql').hash,
'text.subversion-commit' : require('ace/textmate/bundles/syntaxes/text.subversion-commit').hash,
'text.plain' : require('ace/textmate/bundles/syntaxes/text.plain').hash,
'text.html.textile' : require('ace/textmate/bundles/syntaxes/text.html.textile').hash,
'source.regexp.oniguruma' : require('ace/textmate/bundles/syntaxes/source.regexp.oniguruma').hash,
'text.plain.release-notes' : require('ace/textmate/bundles/syntaxes/text.plain.release-notes').hash,
'text.xml' : require('ace/textmate/bundles/syntaxes/text.xml').hash,
'text.xml.xsl' : require('ace/textmate/bundles/syntaxes/text.xml.xsl').hash,
'source.yaml' : require('ace/textmate/bundles/syntaxes/source.yaml').hash,

}
var file_typs = {
	'conf':'source.apache-config',
'htaccess':'source.apache-config',
'applescript':'source.applescript',
'script editor':'source.applescript',
'blog.html':'text.blog.html',
'blog.markdown':'text.blog.markdown',
'blog.mdown':'text.blog.markdown',
'blog.mkdn':'text.blog.markdown',
'blog.md':'text.blog.markdown',
'blog.txt':'text.blog',
'blog.textile':'text.blog.textile',
'textmate':'source.plist.tm-grammar',
'cc':'source.cplusplus',
'cpp':'source.cplusplus',
'cp':'source.cplusplus',
'cxx':'source.cplusplus',
'c++':'source.cplusplus',
'C':'source.cplusplus',
'h':'source.cplusplus',
'hh':'source.cplusplus',
'hpp':'source.cplusplus',
'h++':'source.cplusplus',
'c':'source.c',
'h':'source.c',
'css':'source.css',
'css.erb':'source.css',
'diff':'source.diff',
'patch':'source.diff',
'html':'text.html.basic',
'htm':'text.html.basic',
'shtml':'text.html.basic',
'xhtml':'text.html.basic',
'phtml':'text.html.basic',
'php':'text.html.basic',
'inc':'text.html.basic',
'tmpl':'text.html.basic',
'tpl':'text.html.basic',
'ctp':'text.html.basic',
'java':'source.java',
'bsh':'source.java',
'properties':'source.java-props',
'js':'source.js',
'htc':'source.js',
'jsx':'source.js',
'bib':'text.bibtex',
'tex':'text.tex.latex',
'sty':'text.tex',
'cls':'text.tex',
'mail':'text.mail.markdown',
'mdown':'text.html.markdown',
'markdown':'text.html.markdown',
'markdn':'text.html.markdown',
'md':'text.html.markdown',
'mm':'source.objcplusplus',
'M':'source.objcplusplus',
'h':'source.objcplusplus',
'm':'source.objc',
'h':'source.objc',
'strings':'source.strings',
'pl':'source.perl',
'pm':'source.perl',
'pod':'source.perl',
't':'source.perl',
'PL':'source.perl',
'py':'source.python',
'rpy':'source.python',
'pyw':'source.python',
'cpy':'source.python',
'SConstruct':'source.python',
'Sconstruct':'source.python',
'sconstruct':'source.python',
'SConscript':'source.python',
're':'source.regexp.python',
'rb':'source.ruby',
'rbx':'source.ruby',
'rjs':'source.ruby',
'Rakefile':'source.ruby',
'rake':'source.ruby',
'cgi':'source.ruby',
'fcgi':'source.ruby',
'gemspec':'source.ruby',
'irbrc':'source.ruby',
'capfile':'source.ruby',
'rhtml':'text.html.ruby',
'erb':'text.html.ruby',
'html.erb':'text.html.ruby',
'js.erb':'source.javascript.rails',
'rjs':'source.ruby.rails.rjs',
'rb':'source.ruby.rails',
'rxml':'source.ruby.rails',
'builder':'source.ruby.rails',
'erbsql':'source.sql.ruby',
'sql.erb':'source.sql.ruby',
'sh':'source.shell',
'ss':'source.shell',
'bashrc':'source.shell',
'bash_profile':'source.shell',
'bash_login':'source.shell',
'profile':'source.shell',
'bash_logout':'source.shell',
'.textmate_init':'source.shell',
'sql':'source.sql',
'ddl':'source.sql',
'dml':'source.sql',
'svn-commit.tmp':'text.subversion-commit',
'svn-commit.2.tmp':'text.subversion-commit',
'txt':'text.plain',
'textile':'text.html.textile',
're':'source.regexp.oniguruma',
'tmReleaseNotes':'text.plain.release-notes',
'xml':'text.xml',
'tld':'text.xml',
'jsp':'text.xml',
'pt':'text.xml',
'cpt':'text.xml',
'dtml':'text.xml',
'rss':'text.xml',
'opml':'text.xml',
'xsl':'text.xml.xsl',
'xslt':'text.xml.xsl',
'yaml':'source.yaml',
'yml':'source.yaml',

}

var SyntaxManager = function(scope) {
    this.$syntaxs_hash = syntaxs_hash;
	this.$file_typs = file_typs;
    this.$syntaxs = {};
};

(function() {
	
	this.getScope = function(file_type){
		return this.$file_typs[file_type];
	}
	this.addSyntax = function(scope, node){
		this.$syntaxs[scope] = node;
	}
	this.getSyntax = function(scope){
		if(!this.$syntaxs[scope] && this.$syntaxs_hash[scope]){
			this.addSyntax(scope, new SyntaxNode(this.$syntaxs_hash[scope]));
		}
		return this.$syntaxs[scope];
	}

}).call(SyntaxManager.prototype);

exports.SyntaxManager = new SyntaxManager();
});
